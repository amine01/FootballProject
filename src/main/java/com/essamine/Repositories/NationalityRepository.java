package com.essamine.Repositories;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import javax.sql.DataSource;

import com.essamine.entities.Nationality;

public class NationalityRepository {
	private final DataSource ds;

	public NationalityRepository() {
		try {
			Context ctx = new InitialContext();
			try {
				ds = (DataSource) ctx
						.lookup("java:comp/env/jdbc/footballprojectDB");
			} finally {
				ctx.close();
			}

		} catch (NamingException e) {
			throw new RuntimeException(e);
		}

	}

	public void init() throws SQLException {
		Connection cnt = ds.getConnection();
		try {
			Statement stmt = cnt.createStatement();
			try {
				String sql = "create table if not exists nationality(id integer generated by default as identity primary key,"
						+ "nationality varchar(255),person_id integer,foreign key (person_id) references person)";
				stmt.execute(sql);
			} finally {
				stmt.close();
			}
		} finally {
			cnt.close();
		}
	}

	public void create(Nationality nationality) throws SQLException {

		Connection connection = ds.getConnection();
		try {
			Statement stmt = connection.createStatement();
			try {
				String sql = "insert into nationality(nationality,person_id) values('"
						+ nationality.getNationality()
						+ "',"
						+ nationality.getPerson_id() + ")";
				stmt.executeUpdate(sql, Statement.RETURN_GENERATED_KEYS);
				ResultSet generatedKeys = stmt.getGeneratedKeys();
				try {
					if (generatedKeys.next()) {
						nationality.setId(generatedKeys.getLong("id"));
					}

				} finally {
					generatedKeys.close();
				}
			} finally {
				stmt.close();
			}
		} finally {
			connection.close();
		}
	}

}
